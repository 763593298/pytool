#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Date    : 2014-03-29 21:34:59
# @Function:
# @Author  : BeginMan

import os
import urllib
import urllib2
import sys
import cookielib


def django_china():
	"""登录Django-china"""
	user_agent = '	Mozilla/5.0 (Windows NT 6.1; rv:28.0) Gecko/20100101 Firefox/28.0'
	#伪装浏览器头
	headers = { 'User-Agent' : user_agent,
				'Referer':'http://django-china.cn/accounts/signin/',
           		'Host':'django-china.cn',
           		'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
				'Accept-Encoding':'gzip, deflate',
				'Accept-Language':'zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3',
				'Connection':'keep-alive',
           	}
	url = 'http://django-china.cn/accounts/signin/'
	values = {'identification':'xinxinyu2011@163.com','password':'fang1991','csrfmiddlewaretoken':'oIW57aV5SrBQgcjAvUvwa4WdN2CvCtQ8'}
	data = urllib.urlencode(values)									# url编码
	req = urllib2.Request(url,data,headers=headers)					# 发送请求同时传data表单
	try:
		response = urllib2.urlopen(req)								# 返回一个相关请求response对象
	except urllib2.URLError, e:
		if hasattr(e, 'reason'):
			print 'Reason: ', e.reason
		elif hasattr(e, 'code'):
			print 'Code: ', e.code
	else:
		content = response.read()									# 读取反馈的内容 
		type = sys.getfilesystemencoding()      					# local encode format  
		print content.decode("UTF-8").encode(type)  				# convert encode format  
		


def Cnblog():
	"""登录博客园并发布文章"""
	user_agent = 'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)'
	headers = { 'User-Agent' : user_agent,
				'Referer':'https://passport.cnblogs.com/login.aspx?ReturnUrl=http://www.cnblogs.com/BeginMan/admin/EditPosts.aspx',
           		'Host':'passport.cnblogs.com',
           	}
	params = {'tbUserName':'BeginMan',
              'tbPassword':'1991fang',
               "__EVENTVALIDATION":"/wEdAAUyDI6H/s9f+ZALqNAA4PyUhI6Xi65hwcQ8/QoQCF8JIahXufbhIqPmwKf992GTkd0wq1PKp6+/1yNGng6H71Uxop4oRunf14dz2Zt2+QKDEIYpifFQj3yQiLk3eeHVQqcjiaAP",
               "__VIEWSTATE	":"/wEPDwULLTE1MzYzODg2NzZkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYBBQtjaGtSZW1lbWJlcm1QYDyKKI9af4b67Mzq2xFaL9Bt",
               "btnLogin":"登  录",
               "txtReturnUrl":"http://home.cnblogs.com/"}
	print 'login......'
	params = urllib.urlencode(params)
	#设置cookie
	# cj=cookielib.CookieJar()
	# opener=urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))
	# urllib2.install_opener(opener)
	
	request2 = urllib2.Request('https://passport.cnblogs.com/login.aspx',params,headers=headers)
	response2 =  urllib2.urlopen(request2)	#post 数据
	print response2.read()
	print "log success"
	params2={'__VIEWSTATE':'',
				'Editor$Edit$txbTitle':'titleSSSSSSSSSS',								#文章标题
                "Editor$Edit$EditorBody":"<p>33333333333333333333333</p>",	#文章内容
                "Editor$Edit$APOptions$APSiteHome$chkDisplayHomePage":"on",
                "Editor$Edit$Advanced$ckbPublished":"on",
                "Editor$Edit$Advanced$chkComments":"on",
                "Editor$Edit$Advanced$chkMainSyndication":"on",
                "Editor$Edit$Advanced$txbEntryName":"",
                "Editor$Edit$Advanced$txbExcerpt":"",
                "Editor$Edit$Advanced$txbTag":"",
                "Editor$Edit$Advanced$tbEnryPassword":"",
                "Editor$Edit$lkbPost":"发布"}
	params2=urllib.urlencode(params2)
	print "start to write a new blog"
	request3=opener.open("http://www.cnblogs.com/BeginMan/admin/EditPosts.aspx?opt=1",params2)#post数据
	print "success write !"
	print request3.read()


def main():
	django_china()

if __name__ == '__main__':
	main()